@model IEnumerable<UserRoleVM>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Manage Users</h6>
    </div>
    <div class="card-header py-3">
        <a asp-action="create" class="btn btn-primary">Create a User</a>
            <form asp-action="index" class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
                <div class="input-group">
                    <input name="searchText" type="text" class="form-control bg-light border-0 small" placeholder="Search for users"
                           aria-label="Search" aria-describedby="basic-addon2">
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">
                            <i class="fas fa-search fa-sm"></i>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    
    
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email Address</th>
                        <th>Status</th>
                        <th>Roles</th>
                        <th>Control</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var userRoleVM in Model)
                    {
                        <tr>
                            <td>@userRoleVM.User.UserName</td>
                            <td>@userRoleVM.User.Email</td>
                            
                            @if (@userRoleVM.User.IsBlocked)
                            {
                                <td class="text-danger">Blocked</td>
                            }
                            else
                            {
                                <td class="text-success">Active</td>
                            }
                            <td>
                                @string.Join(", ", userRoleVM.UserRoles)
                            </td>
                            <td>
                                <a class="btn btn-secondary" asp-action="delete" asp-route-id="@userRoleVM.User.Id">Delete</a>
                                <a class="btn btn-secondary" asp-action="Update" asp-route-id="@userRoleVM.User.Id">Modify</a>
                                <a class="btn btn-secondary" asp-action="detail" asp-route-id="@userRoleVM.User.Id">Detail</a>
                                <a class="btn btn-secondary" asp-action="updateuserrole" asp-route-id="@userRoleVM.User.Id">Role</a>

                                @if (!(User.Identity.Name == userRoleVM.User.UserName && User.IsInRole("admin")))
                                {
                                    @if (userRoleVM.User.IsBlocked)
                                    {
                                        <a class="btn btn-secondary" asp-action="ChangeUserStatus" asp-route-id="@userRoleVM.User.Id">Unblock</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-secondary" asp-action="ChangeUserStatus" asp-route-id="@userRoleVM.User.Id">Block</a>
                                    }
                                }
                            </td>
                            
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>
@* <div class="d-flex justify-content-center">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item @(Model.HasPreviousPage?"":"disabled")"><a class="page-link" asp-action="index" asp-route-page=@(Model.CurrentPage-1)>Previous</a></li>
            @for (int i = Model.Start; i <= Model.End; i++)
            {
                <li class="page-item @(i==Model.CurrentPage?"disabled":"")"><a class="page-link" asp-action="index" asp-route-page="@i">@i</a></li>
            }
            <li class="page-item @(Model.HasNextPage?"":"disabled")"><a class="page-link" asp-action="index" asp-route-page=@(Model.CurrentPage+1)>Next</a></li>
        </ul>
    </nav>
</div> *@


